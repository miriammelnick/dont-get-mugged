
###############################################################################
#
# ResumableUpload
# 
#
# Python version 2.6
#
###############################################################################

from temboo.core.choreography import Choreography
from temboo.core.choreography import InputSet
from temboo.core.choreography import ResultSet
from temboo.core.choreography import ChoreographyExecution


class ResumableUpload(Choreography):

    """
    Create a new instance of the ResumableUpload Choreography. A TembooSession object, containing a valid
    set of Temboo credentials, must be supplied.
    """
    def __init__(self, temboo_session):
        Choreography.__init__(self, temboo_session, '/Library/Google/Documents/ResumableUpload')


    def new_input_set(self):
        return ResumableUploadInputSet()

    def _make_result_set(self, result, path):
        return ResumableUploadResultSet(result, path)

    def _make_execution(self, session, exec_id, path):
        return ResumableUploadChoreographyExecution(session, exec_id, path)

"""
An InputSet with methods appropriate for specifying the inputs to the ResumableUpload
choreography. The InputSet object is used to specify input parameters when executing this choreo.
"""
class ResumableUploadInputSet(InputSet):
        """
        Set the value of the DataStream input for this choreography. ((required, string) The binary file contents to be used for the resumable upload operation.)
        """
        def set_DataStream(self, value):
            InputSet._set_input(self, 'DataStream', value)

        """
        Set the value of the AuthorizationKey input for this choreography. ((optional, string) The authorization key generated by the ClientLogin method.)
        """
        def set_AuthorizationKey(self, value):
            InputSet._set_input(self, 'AuthorizationKey', value)

        """
        Set the value of the ContentType input for this choreography. ((required, string) The content-type of this file upload (i.e. application/pdf, application/msword, image/jpg).)
        """
        def set_ContentType(self, value):
            InputSet._set_input(self, 'ContentType', value)

        """
        Set the value of the Password input for this choreography. ((required, string) Your Google password.)
        """
        def set_Password(self, value):
            InputSet._set_input(self, 'Password', value)

        """
        Set the value of the Title input for this choreography. ((required, string) The title of the document you are uploading.)
        """
        def set_Title(self, value):
            InputSet._set_input(self, 'Title', value)

        """
        Set the value of the Username input for this choreography. ((conditional, string) You Google username.)
        """
        def set_Username(self, value):
            InputSet._set_input(self, 'Username', value)


"""
A ResultSet with methods tailored to the values returned by the ResumableUpload choreography.
The ResultSet object is used to retrieve the results of a choreography execution.
"""
class ResumableUploadResultSet(ResultSet):
        """
        Retrieve the value for the "Response" output from this choreography execution. ((xml) The response from Google.)
        """
        def get_Response(self):
            return self._output.get('Response', None)

class ResumableUploadChoreographyExecution(ChoreographyExecution):
    
    def _make_result_set(self, response, path):
        return ResumableUploadResultSet(response, path)
